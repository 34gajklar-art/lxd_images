name: Build and Deploy Simplestreams

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 检出仓库
        uses: actions/checkout@v4

      - name: 安装依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: 获取已发布镜像文件
        id: get_assets
        run: |
          api_url="https://api.github.com/repos/oneclickvirt/lxd_images/releases/tags/processed"
          assets=$(curl -sL "$api_url" | jq -r '.assets[] | {name: .name, url: .browser_download_url, size: .size, updated_at: .updated_at}')
          echo "$assets" > assets.json

      - name: 生成simplestreams index.json和images.json
        id: generate_simple_streams
        run: |
          mkdir -p site/streams/v1
          now=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          uuid="oneclickvirt-lxdimages"
          images_array="[]"
          while IFS= read -r asset; do
            name=$(echo "$asset" | jq -r .name)
            url=$(echo "$asset" | jq -r .url)
            size=$(echo "$asset" | jq -r .size)
            updated=$(echo "$asset" | jq -r .updated_at)
            if [[ "$name" =~ \.tar\.xz$ ]]; then
              arch=$(echo "$name" | sed -E 's/.*-([a-z0-9_]+)\.tar\.xz/\1/')
              alias=$(echo "$name" | sed -E 's/(.*)-[a-z0-9_]+\.tar\.xz/\1/')
              id=$(echo "$name" | sha1sum | awk '{print $1}')
              images_array=$(echo "$images_array" | jq \
                --arg id "$id" \
                --arg alias "$alias" \
                --arg arch "$arch" \
                --arg url "$url" \
                --arg size "$size" \
                --arg updated "$updated" \
                '. += [{
                  "id": $id,
                  "aliases": [$alias],
                  "architecture": $arch,
                  "stream": "default",
                  "ftype": "lxd.tar.xz",
                  "path": $url,
                  "size": ($size | tonumber),
                  "created_at": $updated,
                  "updated_at": $updated
                }]'
              )
            fi
          done < <(jq -c '.' assets.json)
          cat > site/streams/v1/index.json <<EOF
{
  "index": {
    "format": "simplestreams",
    "updated_at": "$now",
    "content_id": "$uuid",
    "products": {
      "lxd": {
        "versions": {
          "1.0": {
            "items": [
              {
                "path": "images.json"
              }
            ]
          }
        }
      }
    }
  }
}
EOF
          echo "$images_array" > images_list.json
          cat > site/streams/v1/images.json <<EOF
{
  "content_id": "$uuid",
  "format": "lxd_simple",
  "updated_at": "$now",
  "images": $(cat images_list.json)
}
EOF

      - name: 部署到gh-pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
          publish_branch: gh-pages

      - name: 配置自定义域名
        run: |
          echo "lxdimages.spiritlhl.net" > site/CNAME
        continue-on-error: true
