name: Build Simplestreams

on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  build-repository:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl

      - name: Fetch release assets
        run: |
          echo "Fetching release assets..."
          mkdir -p temp

          curl -s "https://api.github.com/repos/oneclickvirt/lxd_images/releases" \
            | jq -r '.[] | select(.tag_name=="processed") | .assets // empty' > temp/assets.json

          if [ "$(jq length temp/assets.json)" -gt 0 ]; then
            echo "Found $(jq length temp/assets.json) assets"
          else
            echo "[]" > temp/assets.json
            echo "No assets found"
          fi

      - name: Process images
        run: |
          echo "Processing image information..."

          jq -n \
            --slurpfile assets temp/assets.json '
            $assets[0]
            | map(
                select(.name | test("^[a-z0-9]+-[0-9a-z\\.-]+-[a-z0-9]+-[a-z]+-(rootfs\\.squashfs|lxd\\.tar\\.xz)$"))
                | {
                    name: .name,
                    url: .browser_download_url,
                    size: .size
                  }
              )
            | group_by(.name | capture("^(?<os>[a-z0-9]+)-(?<version>[0-9a-z\\.-]+)-(?<arch>[a-z0-9]+)-(?<variant>[a-z]+)-(rootfs|lxd)\\.").os + "-" + .name | capture("^(?<os>[a-z0-9]+)-(?<version>[0-9a-z\\.-]+)-(?<arch>[a-z0-9]+)-(?<variant>[a-z]+)-").variant + "-" + .name | capture("^(?<os>[a-z0-9]+)-(?<version>[0-9a-z\\.-]+)-(?<arch>[a-z0-9]+)-(?<variant>[a-z]+)-(?<type>rootfs|lxd)\\.").type)
            | map({
                os: .[0].name | capture("^(?<os>[a-z0-9]+)-").os,
                version: .[0].name | capture("^[a-z0-9]+-(?<version>[0-9a-z\\.-]+)-").version,
                arch: .[0].name | capture("^[a-z0-9]+-[0-9a-z\\.-]+-(?<arch>[a-z0-9]+)-").arch,
                variant: .[0].name | capture("^[a-z0-9]+-[0-9a-z\\.-]+-[a-z0-9]+-(?<variant>[a-z]+)-").variant,
                items: map({
                  type: (.name | endswith("rootfs.squashfs") | if . then "rootfs" else "lxd" end),
                  url: .url,
                  size: .size
                })
              })
            ' > temp/processed_images.json

          echo "Processed $(jq length temp/processed_images.json) image entries"

      - name: Generate Simplestreams index + images.json
        run: |
          mkdir -p pages/streams/v1

          timestamp=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          echo "Using timestamp: $timestamp"

          cat > pages/streams/v1/index.json <<EOF
          {
            "index": {
              "images": {
                "path": "streams/v1/images.json",
                "format": "simplestreams.images:1.0"
              }
            },
            "format": "index:1.0",
            "updated_at": "$timestamp"
          }
          EOF

          jq -n --slurpfile images temp/processed_images.json --arg updated "$timestamp" '
          {
            format: "simplestreams.images:1.0",
            updated_at: $updated,
            images: (
              $images[0] | map({
                os: .os,
                release: .version,
                arch: .arch,
                variant: .variant,
                updated_at: $updated,
                items: (
                  map({key: .type, value: { url: .url, size: .size } }) | from_entries
                )
              })
            )
          }
          ' > pages/streams/v1/images.json

      - name: Generate simple web page
        run: |
          mkdir -p pages
          cat > pages/index.html <<EOF
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8" />
            <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
            <title>LXD Images Repository</title>
          </head>
          <body>
            <h1>LXD Images Repository (Simplestreams)</h1>
            <p>Images available via <code>simplestreams</code> protocol:</p>
            <pre>lxc remote add spiritlhl-images https://oneclickvirt.github.io/lxd_images --protocol=simplestreams --public</pre>
            <p><a href="./streams/v1/index.json">index.json</a></p>
            <p><a href="./streams/v1/images.json">images.json</a></p>
          </body>
          </html>
          EOF

      - name: Validate output
        run: |
          echo "=== Validation ==="
          jq . pages/streams/v1/index.json
          jq . pages/streams/v1/images.json

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./pages
          publish_branch: gh-pages
          force_orphan: true
          cname: false
